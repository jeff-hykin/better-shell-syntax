- source: '#!'
  scopesBegin:
    - comment.line.number-sign
    - meta.shebang
  scopes:
    - punctuation.definition.comment.shebang
- source: /usr/bin/env dash
  scopesEnd:
    - comment.line.number-sign
    - meta.shebang
- source: alias
  scopesBegin:
    - meta.expression.assignment.alias
  scopes:
    - storage.type.alias
- source: end
  scopes:
    - variable.other.assignment
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: fi
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - meta.expression.assignment.alias
    - string.quoted.double
- source: '[['
  scopesBegin:
    - meta.scope.logical-expression
  scopes:
    - punctuation.definition.logical-expression
- source: '10'
  scopes:
    - constant.numeric
    - constant.numeric.integer
- source: '-eq'
  scopes:
    - keyword.operator.logical
- source: '10'
  scopes:
    - constant.numeric
    - constant.numeric.integer
- source: ']]'
  scopes:
    - punctuation.definition.logical-expression
  scopesEnd:
    - meta.scope.logical-expression
- source: ;
  scopes:
    - punctuation.terminator.statement.semicolon
- source: then
  scopes:
    - keyword.control.then
- source: echo
  scopesBegin:
    - meta.statement
    - meta.statement.command
  scopes:
    - meta.statement.command.name
    - entity.name.function.call
    - entity.name.command
    - support.function.builtin
- source: hi
  scopes:
    - meta.argument
    - string.unquoted.argument
  scopesEnd:
    - meta.statement
    - meta.statement.command
- source: alias
  scopesBegin:
    - meta.expression.assignment.alias
  scopes:
    - storage.type.alias
- source: end
  scopes:
    - variable.other.assignment
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: fi
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: alias
  scopes:
    - storage.type.alias
- source: whatif
  scopes:
    - variable.other.assignment
- source: '='
  scopes:
    - keyword.operator.assignment
- source: ''''
  scopesBegin:
    - string.quoted.single
  scopes:
    - punctuation.definition.string.begin
- source: if
- source: ''''
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - meta.expression.assignment.alias
    - string.quoted.single
- source: fi
  scopes:
    - keyword.control.fi
